name: Build

on: [push]

jobs:
  build_wheels_matrix:
    runs-on: ubuntu-latest
    outputs:
      include: ${{ steps.set-matrix.outputs.include }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - run: pip install cibuildwheel==2.17.0
      - id: set-matrix
        run: |
          MATRIX_INCLUDE=$(
            {
              cibuildwheel --print-build-identifiers --platform linux --arch x86_64,aarch64 | grep cp |  jq -nRc '{"only": inputs, "os": "ubuntu-latest"}' \
              && cibuildwheel --print-build-identifiers --platform macos --arch x86_64,arm64 | grep cp |  jq -nRc '{"only": inputs, "os": "macos-latest"}' \
              && cibuildwheel --print-build-identifiers --platform windows --arch x86,AMD64 | grep cp |  jq -nRc '{"only": inputs, "os": "windows-latest"}'
            } | jq -sc
          )
          echo "include=$MATRIX_INCLUDE" >> $GITHUB_OUTPUT

  build_wheels:
    needs: build_wheels_matrix
    runs-on: ${{ matrix.os }}
    name: Build ${{ matrix.only }}

    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.build_wheels_matrix.outputs.include) }}

    defaults:
      run:
        shell: bash

    env:
      REPO_DIR: 'dlib'
      BUILD_COMMIT: 'v19.24.2'
      DLIB_BIN_VERSION: '19.24.2'

    steps:
    - uses: actions/checkout@v4

    - name: Checkout submodules
      run: |
        git submodule update --init --recursive
        git -C dlib checkout $BUILD_COMMIT

    - name: Fix setup.py
      run: |
        sed -i'' -e "s/name='dlib'/name='dlib-bin'/" $REPO_DIR/setup.py
        sed -i'' -e "s/version=read_version_from_cmakelists('dlib\/CMakeLists.txt')/version='$DLIB_BIN_VERSION'/" $REPO_DIR/setup.py
        sed -i'' -e "s/url='https:\/\/github\.com\/davisking\/dlib'/url='https:\/\/github\.com\/alesanfra\/dlib-wheels'/" $REPO_DIR/setup.py
        sed -i'' -e "s/_cmake_extra_options = \[\]/_cmake_extra_options = \['-DDLIB_NO_GUI_SUPPORT=ON'\]/" $REPO_DIR/setup.py
          
    - name: Set up QEMU
      if: runner.os == 'Linux'
      uses: docker/setup-qemu-action@v3

    - uses: pypa/cibuildwheel@v2.17.0
      with:
        only: ${{ matrix.only }}
      env:
        CIBW_BUILD_VERBOSITY: 1
        CIBW_BEFORE_BUILD: pip install cmake

    - uses: actions/upload-artifact@v3
      with:
        name: dist
        path: wheelhouse/*.whl
 
  upload_pypi:
    needs: [build_wheels]
    runs-on: ubuntu-latest
    # upload to PyPI on master
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_PASSWORD }}
          skip_existing: true
